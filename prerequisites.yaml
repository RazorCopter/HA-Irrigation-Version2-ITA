
#================================================================
#===
#===               THIS IS NOT PART OF THE PACKAGE
#===
#=== This file contains some examples of how to include sections 
#=== that are needed but not included as part of the package.
#===
#===                   DO NOT COPY IT BLINDLY!!
#===
#================================================================

#================
#=== Input texts
#================
input_text:
  notifications_user1_name:
    min: 0
    max: 20

  notifications_user2_name:
    min: 0
    max: 20
    
    
#============
#=== Sensors
#============
sensor:
  #==================
  #=== Time and Date 
  #==================
  - platform: time_date
    display_options:
      - 'time'
      - 'date'

  #==================================================
  #=== DarkSky (See the readme for more information)
  #==================================================
  - platform: darksky
    api_key: !secret darksky_api_key
    forecast:
      - 0
    monitored_conditions:
      - temperature_high           
      - minutely_summary 


  #=====================================
  #=== A sensor for the weather outlook
  #=====================================
  - platform: template
    sensors:
      irrigation_weather_outlook:
        value_template: >
          {% set current = state_attr('sensor.weather_api_current', 'current') %}
          {% set current_conditons = current.condition.text %}
          {% set max_high_temp = states('sensor.weather_api_forecast_max_temp_today') %}
          {% set will_rain_today = states('sensor.weather_api_forecast_will_it_rain_today') %}
          {% set will_rain_tomorrow = states('sensor.weather_api_forecast_will_it_rain_tomorrow') %}
          {% set total_rain_today = states('sensor.weather_api_forecast_total_rain_today') %}
          {% set total_rain_tomorrow = states('sensor.weather_api_forecast_total_rain_tomorrow') %}
          {% set chance_of_rain_today = states('sensor.weather_api_forecast_chance_of_rain_today') %}
          {% set chance_of_rain_tomorrow = states('sensor.weather_api_forecast_chance_of_rain_tomorow') %}

          {% set rain_today = total_rain_today ~ 'mm / ' ~ chance_of_rain_today ~ '%' %}
          {% set rain_tomorrow = total_rain_tomorrow ~ 'mm / ' ~ chance_of_rain_tomorrow ~ '%' %}

          {% set outlook = 'Outlook: ' ~ current_conditons ~ ', High Temp ' ~ max_high_temp ~ 'Â°C<br>' %}

          {% if will_rain_today == '1' and will_rain_tomorrow == '1' %}
            {% set outlook = outlook ~ 'Rain Today (' ~ rain_today ~ ') & Tomorrow (' ~ rain_tomorrow ~ ')' %}
          {% elif will_rain_today == '1' %}
            {% set outlook = outlook ~ 'Rain Today (' ~ rain_today ~ '), none tomorrow' %}
          {% elif will_rain_tomorrow == '1' %}
            {% set outlook = outlook ~ 'Rain Tomorrow (' ~ rain_tomorrow ~ ')' %}
          {% else %}
            {% set outlook = outlook ~ 'No rain forecast today or tomorrow.' %}
          {% endif %}

          {{ outlook }}
        entity_picture_template: >
          {% set current = state_attr('sensor.weather_api_current', 'current') %}
          {% set is_day = current.is_day %}
          {% set icon = current.condition.icon %}
          {% set icon = icon.split('/')[-1] %}
          {% set icon = icon.split('.')[0] %}
          {% set is_day = current.is_day %}
          
          {% if is_day %}
            {{ '/local/icons/weather_icons/weather_api_day/' ~ icon ~ '.png' }}
          {% else %}
            {{ '/local/icons/weather_icons/weather_api_night/' ~ icon ~ '.png' }}
          {% endif %}



  #=======================================================
  #=== SmartWeather (See the readme for more information)
  #=======================================================
  - platform: rest
    resource: !secret smartweather_resource_1
    name: smartweather_1
    value_template: >
      {{ value_json.station_id }}
    json_attributes:
      - status
      - station_units
      - obs    
    scan_interval:
      minutes: NUMBER OF SECONDS
      
#=== Smartweather secret
smartweather_resource_1: http://swd.weatherflow.com/swd/rest/observations/station/STATION_NUMBER?api_key=API_KEY

