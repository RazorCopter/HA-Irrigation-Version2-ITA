# lovelace_gen

#====================
#=== WEATHER SENSORS
#====================
type: custom:button-card
name: Sensori Meteo...
icon: mdi:weather-partly-cloudy
show_state: true
state_display: <elt><ha-icon icon=mdi:square-edit-outline></ha-icon></elt>
styles:
  grid:
    - grid-template-areas: '"i n s"'
    - grid-template-columns: 15% auto 5%
    - grid-template-rows: 1fr
  card:
    - height: 2em
    - font-family: >
        [[[
          return states['input_text.irrigation_ui_font_family'].state
        ]]]
    - font-size: 15px
    - padding: 0em 1.5em 0.5em 0.2em
    - background: none
  icon:
    - color: var(--paper-item-icon-color)
  name: 
    - justify-self: start

#=== EDIT WEATHER SENSOR SETTINGS
tap_action:
  action: fire-dom-event
  browser_mod:
    service: browser_mod.popup
    data:
      title: Weather Sensors
      content:
        type: vertical-stack
        cards:
          - type: markdown
            content: >
              Per la 'Previsione Meteo' nella pagina Cicli Ã¨ necessario creare il seguente sensore:
            card_mod:
              style: >
                ha-card {
                  font-family: {% raw %}{{ states('input_text.irrigation_ui_font_family') }}{% endraw %};
                  font-size: 16px;
                  }
          - type: markdown
            content: >
              sensor.irrigation_weather_outlook
            card_mod:
              style: >
                  ha-card {
                    font-family: Monospace; 
                    font-size: 14px;
                    text-align: center;
                  }
          - type: entities
            entities:
              - type: section
                label: Sensori di pioggia (lasciare vuoto per ripristinare l'impostazione predefinita)
                card_mod:
                  style: &text_wrap_style
                    hui-generic-entity-row:
                      $: |
                        .info {
                          text-overflow: unset !important;
                          white-space: unset !important;
                        }
              - entity: input_text.irrigation_external_sensor_raining_now
                name: RSta piovendo
                card_mod:
                  style: *text_wrap_style
              - entity: input_text.irrigation_external_sensor_rainfall_today
                name: Pioggia Oggi
                card_mod:
                  style: *text_wrap_style
              - entity: input_text.irrigation_external_sensor_rainfall_yesterday
                name: Pioggia Ieri
                card_mod:
                  style: *text_wrap_style
              - entity: input_text.irrigation_external_sensor_forecast_rain
                name: Previsioni Pioggia
                card_mod:
                  style: *text_wrap_style
              - entity: input_boolean.irrigation_show_smartweather_stations
                name: Utilizzo di SmartWeather (mostra stazioni)
                card_mod:
                  style: *text_wrap_style
              - type: section
                label: Temperature Sensors (leave blank to reset default)
              - entity: input_text.irrigation_external_sensor_forecast_high_temp
                name: Previsione alta temperatura
                card_mod:
                  style: *text_wrap_style
              - entity: input_text.irrigation_external_sensor_current_temp
                name: Temperatura Corrente
                card_mod:
                  style: *text_wrap_style
            card_mod:
              style: >
                ha-card {
                  font-family: {% raw %}{{ states('input_text.irrigation_ui_font_family') }}{% endraw %};
                  }
      #=== Style needed for pop-up title
      style:
        $: |
          .mdc-dialog .mdc-dialog__container .mdc-dialog__surface {
              font-family: {% raw %}{{ states('input_text.irrigation_ui_font_family') }}{% endraw %};
            }

